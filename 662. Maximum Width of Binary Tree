    int widthOfBinaryTree(TreeNode* root) 
    {
        if(!root) return 0;
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        int ans=0;
        
        while(!q.empty())
        {
            
            int n = q.size();
            int min =q.front().second;
            int first,last;
            
            for(int i=0;i<n;i++)
            {
                
                
                TreeNode* temp = q.front().first;
                int x = q.front().second - min;
                q.pop();
                if(i==0) first=x;
                if(i==n-1) last=x;
                
                if(temp->left) q.push({temp->left,2LL*x+1});
                if(temp->right) q.push({temp->right,2LL*x+2});

            }
            ans = max(ans,last-first+1);
            
            
        }
        
        return ans;
    }
