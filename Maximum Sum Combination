vector<int> Solution::solve(vector<int> &A, vector<int> &B, int C) 
{
    
    sort(A.begin(),A.end(),greater<int>());
    sort(B.begin(),B.end(),greater<int>());
    priority_queue<vector<int>> pq;
    vector<int> ans;
    
    pq.push({A[0]+B[0],0,0});
    
    int n = A.size();
    // vector<vector<int>> visited(n,vector<int>(n,-1));
    
    set<pair<int,int>> visited;
    
    while(C--)
    {
        vector<int> p = pq.top();
        pq.pop();
        
        ans.push_back(p[0]);
        
        if(visited.find({p[1]+1,p[2]})==visited.end() && p[1]+1<n)    
        {
            pq.push({A[p[1]+1]+B[p[2]],p[1]+1,p[2]});
            visited.insert({p[1]+1,p[2]});
        }
        if(visited.find({p[1],p[2]+1})==visited.end() && p[2]+1<n)
        {
visited.insert({p[1],p[2]+1});
pq.push({A[p[1]]+B[p[2]+1],p[1],p[2]+1});
        }
    }
    
return ans;
    
}
