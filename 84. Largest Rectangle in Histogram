class Solution {
public:
    //84. Largest Rectangle in Histogram

    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
int left[n],right[n];
stack<int> st1;
for(int i=0;i<n;i++)
{
    if(st1.size()==0)
    {
        left[i]=-1;
    }
    else if(st1.size()>0 && heights[i]>heights[st1.top()])
    {
        left[i]=st1.top();
    }
    else if(st1.size()>0 && heights[i]<=heights[st1.top()])
    {
        while(st1.size()>0 && heights[i]<=heights[st1.top()])
        {
            st1.pop();
        }
        if(st1.size()==0)
        {
            left[i]=-1;
        }
        else
        {
            left[i]=st1.top();
        }
    }
    st1.push(i);
}

    stack<int >st2;
     for(int i=n-1;i>=0;i--)
    {
        if(st2.size()==0)
        {
            right[i]=n;
        }
        else if(st2.size()>0 && heights[i]>heights[st2.top()])
        {
            right[i]=st2.top();
        }
        else if(st2.size()>0 && heights[i]<=heights[st2.top()])
        {
            while(st2.size()>0 && heights[i]<=heights[st2.top()])
            {
                st2.pop();
            }
            if(st2.size()==0)
            {
                right[i]=n;
            }
            else 
            {
                right[i]=st2.top();
            }
        }
        st2.push(i);
    }
  // reverse(right.begin(),right.end());
    for(int i=0;i<n;i++)
    {
        cout<<left[i];
    }
    int width[n];
    for(int i=0;i<n;i++)
    {
        width[i]=right[i]-left[i]-1;
    }
    int maxi=INT_MIN;
    for(int i=0;i<n;i++)
    {
        maxi=max(maxi,width[i]*heights[i]);
    }
    return maxi;
    }
};
