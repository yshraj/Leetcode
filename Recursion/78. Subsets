//Given an integer array nums of unique elements, return all possible subsets (the power set).
//The solution set must not contain duplicate subsets. Return the solution in any order.

void solve(int i,int n,vector<int> &temp,vector<vector<int>> &ans,vector<int>& nums)
    {
        if(i==n)
        {
            ans.push_back(temp);
            return;
        }
        temp.push_back(nums[i]);
        solve(i+1,n,temp,ans,nums);
        temp.pop_back();
        solve(i+1,n,temp,ans,nums);
        
        
    }
    vector<vector<int>> subsets(vector<int>& nums) 
    {
        vector<vector<int>> ans;
        vector<int> temp;
        solve(0,nums.size(),temp,ans,nums);
        return ans;   
    }
