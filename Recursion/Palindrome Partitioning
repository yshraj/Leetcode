    bool ispal(int i,int j,string str)
    {
        while(i<=j)
        {
            if(str[i]!=str[j]) return false;
            i++;
            j--;
        }
        return true;
        
    }
    void solve(int i,int n,string s,vector<string> temp,vector<vector<string>> &ans)
    {
        if(i==n) 
        {
            ans.push_back(temp);
            return;  
        }
        
        
        for(int j=i;j<n;j++)
        {
            if(ispal(i,j,s))
            {
                temp.push_back(s.substr(i,j-i+1));
                
                solve(j+1,n,s,temp,ans);
                temp.pop_back();
            } 
        }
        
       return; 
    }
    vector<vector<string>> partition(string s) 
    {
        vector<string> temp;
        vector<vector<string>> ans;
        int n=s.size();
        solve(0,n,s,temp,ans);
        return ans;
        
    }
